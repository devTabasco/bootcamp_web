--계정 생성
CREATE USER resumedba 
IDENTIFIED BY 1234 
DEFAULT TABLESPACE USERS
QUOTA UNLIMITED ON USERS;
    -- GRANT
GRANT DBA TO resumedba;

-- 테이블 생성
create table MEMBERS(
ME_NAME    NVARCHAR2(5),
ME_EMAIL   NVARCHAR2(50),
ME_PHONE    NVARCHAR2(11),
ME_PASSWORD   NVARCHAR2(50)
)tablespace users;

/* MEMBERS 테이블 수정 */
ALTER TABLE MEMBERS
ADD ME_BIRTH	NCHAR(8)
ADD ME_SEX	NCHAR(1)
ADD ME_HOMEPHONE	NVARCHAR2(11)
ADD ME_ADDR	NVARCHAR2(50);


create table RESUMELOG(
RL_MEEMAIL	NVARCHAR2(50),
RL_MEPHONE	NVARCHAR2(11),
RL_CREATEDAT	Date,
RL_UPDATEDAT	Date,
RL_ID	NUMBER(22)
)tablespace users;

create table EDUCATION(
ED_MEEMAIL	NVARCHAR2(50),
ED_MEPHONE	NVARCHAR2(11),
ED_RLID	NUMBER(22),
ED_CREATEDAT	DATE,
ED_TYPE	NVARCHAR2(10),
ED_NAME	NVARCHAR2(20),
ED_ADDATE	NCHAR(6),
ED_GRDATE	NCHAR(6),
ED_GRSTATE	NCHAR(1),
ED_ISTRANSFER	NCHAR(1),
ED_MAJOR	NVARCHAR2(10),
ED_GPA	NUMBER(1,2),
ED_SCORE	NUMBER
)tablespace users;

create table CAREER(
CR_MEEMAIL	NVARCHAR2(50),
CR_MEPHONE	NVARCHAR2(11),
CR_RLID	NUMBER,
CR_CREATEDAT	DATE,
CR_COMPANY	NVARCHAR2(20),
CR_TEAM	NVARCHAR2(20),
CR_JODATE	NCHAR(6),
CR_QUDATE	NCHAR(6),
CR_STATE	NCHAR(1),
CR_POSITION	NVARCHAR2(10),
CR_SALARY	NUMBER
)tablespace users;

create table INTERN(
IT_MEEMAIL	NVARCHAR2(50),
IT_MEPHONE	NVARCHAR2(11),
IT_RLID	NUMBER,
IT_CREATEDAT	DATE,
IT_ACTIVITY	NVARCHAR2(20),
IT_GROUP	NVARCHAR2(20),
IT_STDATE	NCHAR(6),
IT_ENDATE	NCHAR(6),
IT_REPORT	NVARCHAR2(50)
)tablespace users;

create table AWARDS(
AW_MEEMAIL	NVARCHAR2(50),
AW_MEPHONE	NVARCHAR2(11),
AW_RLID	NUMBER,
AW_CREATEDAT	DATE,
AW_NAME	NVARCHAR2(20),
AW_AGENCY	NVARCHAR2(20),
AW_DATE	NCHAR(4),
AW_CONTENTS	NVARCHAR2(50)
)tablespace users;

create table CERTIFICATE(
CC_MEEMAIL	NVARCHAR2(50),
CC_MEPHONE	NVARCHAR2(11),
CC_RLID	NUMBER,
CC_CREATEDAT	DATE,
CC_NAME	NVARCHAR2(20),
CC_CERTIFICATEDBY	NVARCHAR2(20),
CC_GETDATE	NCHAR(8)
)tablespace users;

create table SELFINTRO(
SI_MEEMAIL	NVARCHAR2(50),
SI_MEPHONE	NVARCHAR2(11),
SI_RLID	NUMBER,
SI_CREATEDAT	DATE,
SI_TITLE	NVARCHAR2(20),
SI_CONTENTS	NVARCHAR2(50)
)tablespace users;

create table TRAINING(
TN_MEEMAIL	NVARCHAR2(50),
TN_MEPHONE	NVARCHAR2(11),
TN_RLID	NUMBER(22),
TN_CREATEDAT	DATE,
TN_NAME	NVARCHAR2(20),
TN_AGENCY	NVARCHAR2(20),
TN_STARTDATE	NCHAR(6),
TN_ENDDATE	NCHAR(6),
TN_CONTENTS	NVARCHAR2(50)
)tablespace users;

create table OVERSEAS(
OS_MEEMAIL	NVARCHAR2(50),
OS_MEPHONE	NVARCHAR2(11),
OS_RLID	NUMBER,
OS_CREATEDAT	DATE,
OS_NAME	NVARCHAR2(20),
OS_STARTDATE	NCHAR(6),
OS_ENDDATE	NCHAR(6),
OS_CONTENTS	NVARCHAR2(50)
)tablespace users;

create table LANGUAGE(
LG_MEEMAIL	NVARCHAR2(50),
LG_MEPHONE	NVARCHAR2(11),
LG_RLID	NUMBER,
LG_CREATEDAT	DATE,
LG_TYPE	NVARCHAR2(10),
LG_NAME	NVARCHAR2(20),
LG_LEVEL	NVARCHAR2(20)
)tablespace users;

--테이블 시노님
create public synonym ME for MEMBERS;
create public synonym RL for RESUMELOG;
create public synonym ED for EDUCATION;
create public synonym CR for CAREER;
create public synonym IT for INTERN;
create public synonym AW for AWARDS;
create public synonym CC for CERTIFICATE;
create public synonym SI for SELFINTRO;
create public synonym TN for TRAINING;
create public synonym OV for OVERSEAS;
create public synonym LG for LANGUAGE;

--테이블 제약조건
alter table MEMBERS
ADD constraint ME_EMAIL_PHONE_PW_PK primary key(ME_EMAIL, ME_PHONE);

alter table MEMBERS
modify ME_PASSWORD not null
modify ME_NAME not null;

alter table MEMBERS
add constraint ME_PHONE_EMAIL_UK UNIQUE (ME_PHONE, ME_EMAIL);

alter table RESUMELOG
ADD constraint RL_ID_PK primary key(RL_ID, RL_CREATEDAT);

alter table RESUMELOG
add constraint RL_ME_EMAIL_PHONE_FK foreign KEY(RL_MEEMAIL, RL_MEPHONE) references MEMBERS(ME_EMAIL, ME_PHONE);

alter table RESUMELOG
modify RL_CREATEDAT default sysdate;

/* ED 제약조건 */
alter table EDUCATION
ADD constraint ED_PK primary key(ED_MEEMAIL, ED_MEPHONE, ED_RLID, ED_CREATEDAT, ED_TYPE, ED_NAME, ED_ADDATE, ED_GRDATE)
add constraint ED_ME_EMAIL_PHONE_FK foreign KEY(ED_MEEMAIL, ED_MEPHONE) references MEMBERS(ME_EMAIL, ME_PHONE)
add constraint ED_RL_ID_CREATEDAT_FK foreign KEY(ED_RLID, ED_CREATEDAT) references RESUMELOG(RL_ID, RL_CREATEDAT);

/* CR 제약조건 */
alter table CAREER
ADD constraint CR_PK primary key(CR_MEEMAIL, CR_MEPHONE, CR_RLID, CR_CREATEDAT, CR_COMPANY, CR_TEAM, CR_JODATE, CR_QUDATE)
add constraint CR_ME_EMAIL_PHONE_FK foreign KEY(CR_MEEMAIL, CR_MEPHONE) references MEMBERS(ME_EMAIL, ME_PHONE)
add constraint CR_RL_ID_CREATEDAT_FK foreign KEY(CR_RLID, CR_CREATEDAT) references RESUMELOG(RL_ID, RL_CREATEDAT);

/* IT 제약조건 */
alter table INTERN
ADD constraint IT_PK primary key(IT_MEEMAIL, IT_MEPHONE, IT_RLID, IT_CREATEDAT, IT_ACTIVITY, IT_GROUP, IT_STDATE, IT_ENDATE, IT_REPORT)
add constraint IT_ME_EMAIL_PHONE_FK foreign KEY(IT_MEEMAIL, IT_MEPHONE) references MEMBERS(ME_EMAIL, ME_PHONE)
add constraint IT_RL_ID_CREATEDAT_FK foreign KEY(IT_RLID, IT_CREATEDAT) references RESUMELOG(RL_ID, RL_CREATEDAT);

/* AW 제약조건 */
alter table AWARDS
ADD constraint AW_PK primary key(AW_MEEMAIL, AW_MEPHONE, AW_RLID, AW_CREATEDAT, AW_NAME, AW_AGENCY, AW_DATE, AW_CONTENTS)
add constraint AW_ME_EMAIL_PHONE_FK foreign KEY(AW_MEEMAIL, AW_MEPHONE) references MEMBERS(ME_EMAIL, ME_PHONE)
add constraint AW_RL_ID_CREATEDAT_FK foreign KEY(AW_RLID, AW_CREATEDAT) references RESUMELOG(RL_ID, RL_CREATEDAT);

/* CC 제약조건 */
alter table CERTIFICATE
ADD constraint CC_PK primary key(CC_MEEMAIL, CC_MEPHONE, CC_RLID, CC_CREATEDAT, CC_NAME, CC_CERTIFICATEDBY, CC_GETDATE)
add constraint CC_ME_EMAIL_PHONE_FK foreign KEY(CC_MEEMAIL, CC_MEPHONE) references MEMBERS(ME_EMAIL, ME_PHONE)
add constraint CC_RL_ID_CREATEDAT_FK foreign KEY(CC_RLID, CC_CREATEDAT) references RESUMELOG(RL_ID, RL_CREATEDAT);

/* SI 제약조건 */
alter table SELFINTRO
ADD constraint SI_PK primary key(SI_MEEMAIL, SI_MEPHONE, SI_RLID, SI_CREATEDAT, SI_TITLE, SI_CONTENTS)
add constraint SI_ME_EMAIL_PHONE_FK foreign KEY(SI_MEEMAIL, SI_MEPHONE) references MEMBERS(ME_EMAIL, ME_PHONE)
add constraint SI_RL_ID_CREATEDAT_FK foreign KEY(SI_RLID, SI_CREATEDAT) references RESUMELOG(RL_ID, RL_CREATEDAT);

/* TN 제약조건 */
alter table TRAINING
ADD constraint TN_PK primary key(TN_MEEMAIL, TN_MEPHONE, TN_RLID, TN_CREATEDAT, TN_NAME, TN_AGENCY, TN_STARTDATE, TN_ENDDATE, TN_CONTENTS)
add constraint TN_ME_EMAIL_PHONE_FK foreign KEY(TN_MEEMAIL, TN_MEPHONE) references MEMBERS(ME_EMAIL, ME_PHONE)
add constraint TN_RL_ID_CREATEDAT_FK foreign KEY(TN_RLID, TN_CREATEDAT) references RESUMELOG(RL_ID, RL_CREATEDAT);

/* OV 제약조건 */
alter table OVERSEAS
ADD constraint OS_PK primary key(OS_MEEMAIL,
OS_MEPHONE,
OS_RLID,
OS_CREATEDAT,
OS_NAME,
OS_STARTDATE,
OS_ENDDATE,
OS_CONTENTS
)
add constraint OS_ME_EMAIL_PHONE_FK foreign KEY(OS_MEEMAIL, OS_MEPHONE) references MEMBERS(ME_EMAIL, ME_PHONE)
add constraint OS_RL_ID_CREATEDAT_FK foreign KEY(OS_RLID, OS_CREATEDAT) references RESUMELOG(RL_ID, RL_CREATEDAT);

/* LG 제약조건 */
alter table LANGUAGE
ADD constraint LG_PK primary key(
LG_MEEMAIL,
LG_MEPHONE,
LG_RLID,
LG_CREATEDAT,
LG_TYPE,
LG_NAME,
LG_LEVEL
)
add constraint LG_ME_EMAIL_PHONE_FK foreign KEY(LG_MEEMAIL, LG_MEPHONE) references MEMBERS(ME_EMAIL, ME_PHONE)
add constraint LG_RL_ID_CREATEDAT_FK foreign KEY(LG_RLID, LG_CREATEDAT) references RESUMELOG(RL_ID, RL_CREATEDAT);

SELECT *
FROM MEMBERS;

UPDATE MEMBERS
SET ME_BIRTH = ?, ME_SEX = ?, ME_HOMEPHONE = ?, ME_ADDR = ?
WHERE (ME_EMAIL = ? or ME_PHONE = ?);