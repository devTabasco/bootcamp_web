/***************************************************************************                           
                            Dynamic Web POS   
 
 2022.11.29 ~ 2022.12.26
 Test : 2022. 12. 27 ~ 2022. 12. 31
****************************************************************************/
/* USER CREATION 
   DBA : WEBDBA / 8520
   DEV : WEBDEV / 8520
*/
  -- SYS
  CREATE USER WEBDBA 
  IDENTIFIED BY 8520 
  DEFAULT TABLESPACE USERS
  QUOTA UNLIMITED ON USERS;
    -- GRANT
    GRANT DBA TO WEBDBA;
  -- SYS
  CREATE USER WEBDEV
  IDENTIFIED BY "8520"
  DEFAULT TABLESPACE USERS
  QUOTA UNLIMITED ON USERS;
    -- GRANT
    GRANT CONNECT, RESOURCE TO WEBDEV;

/* WEBDBA : 1. REF:SG STOREGROUP */
CREATE TABLE STOREGROUP(
  SG_CODE   NCHAR(8),
  SG_NAME   NVARCHAR2(20)   NOT NULL,
  SG_CEO    NVARCHAR2(5)    NOT NULL,   
  SG_PIN    NCHAR(6)        NOT NULL
)TABLESPACE USERS;
  -- CONSTRAINTS
  ALTER TABLE STOREGROUP
  ADD CONSTRAINT SG_CODE_PK PRIMARY KEY(SG_CODE);
  -- SYNONYM
  CREATE SYNONYM SG FOR WEBDBA.STOREGROUP;
  -- GRANT 
  GRANT SELECT ON WEBDBA.SG TO WEBDEV;
  GRANT SELECT, UPDATE, INSERT ON WEBDBA.STOREGROUP TO WEBDEV;
  -- CHECK : WEBDEV
  SELECT * FROM WEBDBA.SG;
  
/* WEBDBA : 2. MAIN:GC GROUPCUSTOMERS */
CREATE TABLE GROUPCUSTOMERS(
  GC_SGCODE NCHAR(8),
  GC_CODE   NCHAR(16)       NOT NULL,
  GC_ID   NVARCHAR2(10)    NOT NULL,   
  GC_NAME   NCHAR(5)        NOT NULL,
  GC_CHECK  NCHAR(8)
)TABLESPACE USERS;
  -- CONSTRAINTS
  ALTER TABLE GROUPCUSTOMERS
  ADD CONSTRAINT GC_SGCODE_CODE_PK      PRIMARY KEY(GC_SGCODE, GC_CODE)
  ADD CONSTRAINT GC_SGCODE_FK           FOREIGN KEY(GC_SGCODE) 
                                        REFERENCES STOREGROUP(SG_CODE)
  ADD CONSTRAINT GC_ID_UK               UNIQUE(GC_ID)
  ADD CONSTRAINT GC_CHECK_UK            UNIQUE(GC_CHECK);
  -- SYNONYM
  CREATE SYNONYM GC FOR WEBDBA.GROUPCUSTOMERS;
  -- GRANT 
  GRANT SELECT ON WEBDBA.GC TO WEBDEV;
  GRANT SELECT, UPDATE, INSERT ON WEBDBA.GROUPCUSTOMERS TO WEBDEV;
  -- CHECK : WEBDEV
  SELECT * FROM WEBDBA.GC;
  
/* WEBDBA : 3. KEY:ST STORES */
CREATE TABLE STORES(
  ST_CODE           NCHAR(10),
  ST_NAME           NVARCHAR2(50)   NOT NULL,      
  ST_ZIPCODE        NCHAR(5)        NOT NULL,  
  ST_ADDR           NVARCHAR2(100)  NOT NULL,
  ST_ADDRDETAIL     NVARCHAR2(100)  NOT NULL,
  ST_PHONE          NVARCHAR2(11)   NOT NULL,
  ST_SICODE         NCHAR(14),
  ST_SGCODE         NCHAR(8)        NOT NULL
)TABLESPACE USERS;
  -- CONSTRAINTS
  ALTER TABLE STORES
  ADD CONSTRAINT ST_CODE_PK         PRIMARY KEY(ST_CODE)
  ADD CONSTRAINT ST_SGCODE_FK       FOREIGN KEY(ST_SGCODE) 
                                    REFERENCES STOREGROUP(SG_CODE);
  -- SYNONYM
  CREATE SYNONYM ST FOR WEBDBA.STORES;
  -- GRANT 
  GRANT SELECT ON WEBDBA.ST TO WEBDEV;
  GRANT SELECT, INSERT, UPDATE ON WEBDBA.STORES TO WEBDEV;
  -- CHECK : WEBDEV
  SELECT * FROM WEBDBA.ST;
  
/* WEBDBA : 4. REF:SI STOREIMAGES */
CREATE TABLE STOREIMAGES(
  SI_CODE   NCHAR(14),
  SI_NAME   NVARCHAR2(20)   NOT NULL,
  SI_LOC    NCHAR(29)       NOT NULL 
)TABLESPACE USERS;
  -- CONSTRAINTS
  ALTER TABLE STOREIMAGES
  ADD CONSTRAINT SI_CODE_PK         PRIMARY KEY(SI_CODE);
  -- SYNONYM
  CREATE SYNONYM SI FOR WEBDBA.STOREIMAGES;
  -- GRANT 
  GRANT SELECT ON WEBDBA.SI TO WEBDEV;
  GRANT SELECT, INSERT, UPDATE ON WEBDBA.STOREIMAGES TO WEBDEV;
  -- CHECK : WEBDEV
  SELECT * FROM WEBDBA.SI;
  
/* WEBDBA : 5. MAIN:SC STORECATEGORIES */
CREATE TABLE STORECATEGORIES(
  SC_STCODE     NCHAR(10),
  SC_CODE       NCHAR(2)        NOT NULL,
    -- C:상품분류 S:상품상태 L:직원등급 P:가격분류 Z:테이블 구역 O:주문상태 M:결제상태
  SC_NAME       NVARCHAR2(20)   NOT NULL
)TABLESPACE USERS;
  -- CONSTRINTS
  ALTER TABLE STORECATEGORIES
  ADD CONSTRAINT SC_STCODE_CODE_PK      PRIMARY KEY(SC_STCODE, SC_CODE)
  ADD CONSTRAINT SC_STCODE_FK           FOREIGN KEY(SC_STCODE) 
                                        REFERENCES STORES(ST_CODE);
  -- SYNONYM
  CREATE SYNONYM SC FOR WEBDBA.STORECATEGORIES;
  -- GRANT 
  GRANT SELECT ON WEBDBA.SC TO WEBDEV;
  GRANT SELECT, INSERT, UPDATE ON WEBDBA.STORECATEGORIES TO WEBDEV;
  -- CHECK : WEBDEV
  SELECT * FROM WEBDBA.SC;
  
/* WEBDBA : 6. MAIN:SE STOREEMPLOYEES */
CREATE TABLE STOREEMPLOYEES(
  SE_STCODE     NCHAR(10), 
  SE_CODE       NCHAR(3),
  SE_SCLEV      NCHAR(2)        DEFAULT 'L3'    NOT NULL,
  SE_NAME       NVARCHAR2(5)    NOT NULL,
  SE_PIN        NCHAR(6)        DEFAULT '123456' NOT NULL,
  SE_SICODE     NCHAR(14)       
)TABLESPACE USERS;
  -- CONSTRAINTS
  ALTER TABLE STOREEMPLOYEES
  ADD CONSTRAINT SE_STCODE_CODE_PK      PRIMARY KEY(SE_STCODE, SE_CODE) 
  ADD CONSTRAINT SE_STCODE_FK           FOREIGN KEY(SE_STCODE) 
                                        REFERENCES STORES(ST_CODE)
  ADD CONSTRAINT SE_STCODE_SCL_FK       FOREIGN KEY(SE_STCODE, SE_SCLEV) 
                                        REFERENCES STORECATEGORIES(SC_STCODE, SC_CODE);
  -- SYNONYM
  CREATE SYNONYM SE FOR WEBDBA.STOREEMPLOYEES;
  -- GRANT
  GRANT SELECT ON WEBDBA.SE TO WEBDEV;
  GRANT SELECT, INSERT, UPDATE ON WEBDBA.STOREEMPLOYEES TO WEBDEV;
  -- CHECK : WEBDEV
  SELECT * FROM WEBDBA.SE;

/* WEBDBA : 7. ACTION:AL ACCESSLOG */
CREATE TABLE ACCESSLOG(
  AL_SESTCODE   NCHAR(10),
  AL_SECODE     NCHAR(3),
  AL_DATE       DATE    DEFAULT SYSDATE,
  AL_IP         NVARCHAR2(15)   NOT NULL,
  AL_TYPE       NCHAR(1)
)TABLESPACE USERS;
  -- CONSTRAINTS
  ALTER TABLE ACCESSLOG
  ADD CONSTRAINT AL_SESTCODE_SECODE_DATE_PK PRIMARY KEY(AL_SESTCODE, AL_SECODE, AL_DATE)
  ADD CONSTRAINT AL_SESTCODE_SECODE_FK      FOREIGN KEY(AL_SESTCODE, AL_SECODE) 
                                            REFERENCES STOREEMPLOYEES(SE_STCODE, SE_CODE);
 -- SYNONYM
 CREATE SYNONYM AL FOR WEBDBA.ACCESSLOG;
 -- GRANT 
 GRANT SELECT  ON WEBDBA.AL TO WEBDEV;
 GRANT SELECT, INSERT, UPDATE ON WEBDBA.ACCESSLOG TO WEBDEV;
 -- CHECK : WEBDEV
 SELECT * FROM WEBDBA.AL;
 
/* WEBDBA : 8. MAIN:SM STOREMENUES */
CREATE TABLE STOREMENUES(
  SM_STCODE     NCHAR(10), 
  SM_CODE       NCHAR(3),
  SM_SCCAT      NCHAR(2)        NOT NULL,
  SM_NAME       NVARCHAR2(20)   NOT NULL, 
  SM_SCSTATE    NCHAR(2)        DEFAULT 'S1'        NOT NULL,
  SM_COLOR      NCHAR(6)        DEFAULT 'FFFFFF'    NOT NULL,
  SM_SICODE     NCHAR(14)
)TABLESPACE USERS;
  -- CONSTRAINTS
  ALTER TABLE STOREMENUES
  ADD CONSTRAINT SM_STCODE_CODE_PK  PRIMARY KEY(SM_STCODE, SM_CODE) 
  ADD CONSTRAINT SM_STCODE_FK       FOREIGN KEY(SM_STCODE) 
                                    REFERENCES STORES(ST_CODE)
  ADD CONSTRAINT SM_STCODE_SCCAT_FK FOREIGN KEY(SM_STCODE, SM_SCCAT) 
                                    REFERENCES STORECATEGORIES(SC_STCODE, SC_CODE)
  ADD CONSTRAINT SM_STCODE_SCSTATE_FK FOREIGN KEY(SM_STCODE, SM_SCSTATE) 
                                    REFERENCES STORECATEGORIES(SC_STCODE, SC_CODE);
  -- SYNONYM
  CREATE SYNONYM SM FOR WEBDBA.STOREMENUES;
  -- GRANT 
  GRANT SELECT ON WEBDBA.SM TO WEBDEV;
  GRANT SELECT, INSERT, UPDATE ON WEBDBA.STOREMENUES TO WEBDEV;
  -- CHECK : WEBDEV
  SELECT * FROM WEBDBA.SM;
  
/* WEBDBA : 9. MAIN:CP COSTPRICEMGR */
CREATE TABLE COSTPRICEMGR(
  CP_SMSTCODE   NCHAR(10),
  CP_SMCODE     NCHAR(3),
  CP_DATE       DATE,
  CP_COST       NUMBER(6)       NOT NULL,
  CP_PRICE      NUMBER(6)       NOT NULL,
  CP_SCDIS      NCHAR(2)        NOT NULL,
  CP_COMMENT    NVARCHAR2(50)
)TABLESPACE USERS;
  -- CONSTRAINTS
  ALTER TABLE COSTPRICEMGR
  ADD CONSTRAINT CP_SMSTCODE_SMCODE_DATE_PK    PRIMARY KEY(CP_SMSTCODE, CP_SMCODE, CP_DATE)
  ADD CONSTRAINT CP_SMSTCODE_SMCODE_FK         FOREIGN KEY(CP_SMSTCODE, CP_SMCODE) 
                                               REFERENCES STOREMENUES(SM_STCODE, SM_CODE)
  ADD CONSTRAINT CP_SMSTCODE_SCDIS_FK          FOREIGN KEY(CP_SMSTCODE, CP_SCDIS) 
                                               REFERENCES STORECATEGORIES(SC_STCODE, SC_CODE);
  -- SYNONYM
  CREATE SYNONYM CP FOR WEBDBA.COSTPRICEMGR;
  -- GRANT
  GRANT SELECT ON WEBDBA.CP TO WEBDEV;
  GRANT SELECT, INSERT, UPDATE ON WEBDBA.COSTPRICEMGR TO WEBDEV;
  -- CHECK : WEBDEV
  SELECT * FROM WEBDBA.CP;
  
/* WEBDBA : 10. MAIN:TA STORETABLES */
CREATE TABLE STORETABLES(
  TA_STCODE     NCHAR(10),
  TA_CODE       NCHAR(3),
  TA_NAME       NVARCHAR2(20),
  TA_SEAT       NUMBER(2)       DEFAULT 4   NOT NULL,
  TA_SCZONE     NCHAR(2)        NOT NULL,
  TA_TOP        NVARCHAR2(4)    DEFAULT '10px'  NOT NULL,
  TA_LEFT       NVARCHAR2(4)    DEFAULT '10px'  NOT NULL,
  TA_WIDTH      NVARCHAR2(4)    DEFAULT '15%'  NOT NULL,
  TA_HEIGHT     NVARCHAR2(4)    DEFAULT '20%'  NOT NULL
)TABLESPACE USERS;
  -- CONSTRAINTS
  ALTER TABLE STORETABLES
  ADD CONSTRAINT TA_STCODE_CODE_PK  PRIMARY KEY(TA_STCODE, TA_CODE)
  ADD CONSTRAINT TA_STCODE_FK           FOREIGN KEY(TA_STCODE)
                                        REFERENCES STORES(ST_CODE)
  ADD CONSTRAINT TA_STCODE_SCZONE_FK    FOREIGN KEY(TA_STCODE, TA_SCZONE)
                                        REFERENCES STORECATEGORIES(SC_STCODE, SC_CODE);
  -- SYNONYM
  CREATE SYNONYM TA FOR WEBDBA.STORETABLES;
  -- GRANT 
  GRANT SELECT ON WEBDBA.TA TO WEBDEV;
  GRANT SELECT, INSERT, UPDATE ON WEBDBA.STORETABLES TO WEBDEV;
  -- CHECK : WEBDEV
  SELECT * FROM WEBDBA.TA;
  
/* SG_CODE >> SEQUENCE */
CREATE SEQUENCE GROUPCODE
  INCREMENT BY  1
  START WITH    1000001
  MAXVALUE      9999999
  MINVALUE      1000001
  NOCYCLE NOCACHE;
  -- GRANT
  GRANT SELECT ON WEBDBA.GROUPCODE TO WEBDEV;
  
  SELECT WEBDBA.GROUPCODE.NEXTVAL FROM DUAL;
  INSERT INTO WEBDBA.SG(SG_CODE, SG_NAME, SG_CEO, SG_PIN) 
          VALUES('S'||WEBDBA.GROUPCODE.NEXTVAL, 'HoonZzang', '후니', '123456');
  
  
  /* JOB : MEMBER JOIN
  TRANSACTION START
  F1. STEP1.HTML  :: 대표등록
     STOREGROUP 
        GROUPNAME GROUPCEO GROUPPIN 
        B1. [INS:SG] SG_CODE + SG_NAME, SG_CEO, SG_PIN 
        >>  [SEL:SG] SG_CODE
*/
  ALTER TABLE STOREGROUP
  ADD CONSTRAINT SG_NAME_UK UNIQUE(SG_NAME);
  -- groupCode
  SELECT SG_CODE
  FROM WEBDBA.SG
  WHERE SG_NAME = 'HOO';
  SELECT SG_NAME AS GROUPNAME FROM WEBDBA.SG WHERE SG_NAME = 'HoonZzang';
/*
  F2. STEP2.JSP :: 상점등록 << GROUPCODE
     STORES
        STORECODE STORENAME STOREZIPCODE STOREADDR 
        STOREADDRDETAIL STOREPHONE + GROUPCODE
        B2-1. [INS:ST] ST_CODE ST_NAME ST_ZIPCODE ST_ADDR ST_ADDRDETAIL 
                  ST_PHONE GROUPCODE
        B2-2. [INS:SC : L1 L2 L3] STORECODE SC_CODE SC_NAME
              [SEL] SC_CODE, SC_NAME
  F3. STEP3.JSP :: 직원등록 << STORECODE SCCODE[] SCNAME[]
     STOREEMPLOYEES
        STORECODE SCCODE EMPNAME EMPPIN
        B3-1. [SEL] MAX(TO_NUMBER(SE_CODE)) + 1 AS EMPCODE
        B3-2. [INS] STORECODE, EMPCODE, SCCODE, EMPNAME, EMPPIN
  TRANSACTION END
  */
  
  SELECT NVL(MAX(SE_CODE), '000') FROM WEBDBA.SE;
  
  SELECT * FROM WEBDBA.SG;
  SELECT * FROM WEBDBA.ST;
  SELECT * FROM WEBDBA.SC;
  SELECT * FROM WEBDBA.SE;

/* 중복검사를 위한 임시 저장 테이블 */
CREATE TABLE TEMP(
  TEMP_GROUPNAME    NVARCHAR2(20)   NOT NULL
)TABLESPACE USERS;

-- GRANT
GRANT SELECT, INSERT, DELETE ON WEBDBA.TEMP TO WEBDEV;
-- 중복체크 VIEW
CREATE OR REPLACE VIEW DUPGROUPNAME
AS
SELECT SG_NAME AS GROUPNAME FROM WEBDBA.SG
UNION 
SELECT TEMP_GROUPNAME AS GROUPNAME FROM WEBDBA.TEMP;
  -- GRANT
  GRANT SELECT ON WEBDBA.DUPGROUPNAME TO WEBDEV;
SELECT * FROM WEBDBA.DUPGROUPNAME WHERE GROUPNAME = 'Hoon';
-- 중복이 안된 경우 TEMP테이블 INSERT
INSERT INTO WEBDBA.TEMP(TEMP_GROUPNAME) VALUES('Hoon');
COMMIT;

-- 취소시
DELETE FROM WEBDBA.TEMP WHERE TEMP_GROUPNAME = 'Hoon';
COMMIT;

-- 최종 확정 시
INSERT INTO WEBDBA.SG(SG_CODE, SG_NAME, SG_CEO, SG_PIN) VALUES();
DELETE FROM WEBDBA.TEMP WHERE TEMP_GROUPNAME = 'Hoon';
COMMIT;

SELECT * FROM WEBDBA.TEMP;
SELECT * FROM WEBDBA.SG;
SELECT * FROM WEBDBA.ST;
SELECT * FROM WEBDBA.SC;
DELETE FROM WEBDBA.TEMP;
DELETE FROM WEBDBA.SC;
DELETE FROM WEBDBA.ST;
DELETE FROM WEBDBA.SG;
COMMIT;

/* 로그인 */
SELECT * FROM WEBDBA.SG;
 -- S1000034	HoonZzang	후니	123456
SELECT * FROM WEBDBA.ST;
 -- 1234567890	후니네	22223	인천광역시 미추홀구 매소홀로488번길	6-3	01056808050		S1000034
SELECT * FROM WEBDBA.SC;
 /* 1234567890	L1	그룹대표
    1234567890	L2	매니저
    1234567890	L3	직원    */
SELECT * FROM WEBDBA.SE;
 -- [INS]
 INSERT INTO WEBDBA.SE(SE_STCODE, SE_CODE, SE_SCLEV, SE_NAME, SE_PIN, SE_SICODE)
                VALUES('1234567890', '000', 'L1', '후니', '123456', NULL);
 COMMIT;

/* 로그인 [탐색] - [기록] - [탐색] */
-- [탐색] 로그인 가능여부? >> WEBDBA.SE
   -- 1. 상점코드 여부 확인
   SELECT COUNT(*) FROM ST WHERE ST_CODE = '';
   -- 2. 직원 여부 확인
   SELECT COUNT(*) FROM SE WHERE SE_STCODE = '' AND SE_CODE = '';
   -- 3. 핀번호 확인
   SELECT COUNT(*) FROM SE WHERE (SE_STCODE = '' AND SE_CODE = '') AND SE_PIN = '';
   
-- [기록] 로그인 기록 >> WEBDBA.AL
  -- [INS] 
  INSERT INTO WEBDBA.AL(AL_SESTCODE, AL_SECODE, AL_DATE, AL_IP, AL_TYPE) 
                 VALUES( '', '', '', '', 1);
                 
-- [VIEW :: EMPINFO]
CREATE OR REPLACE VIEW ACCESSINFO
AS
SELECT  ST.ST_SGCODE AS GROUPCODE, SG.SG_NAME AS GROUPNAME, 
        SE.SE_STCODE AS STORECODE, ST.ST_NAME AS STORENAME, 
        ST.ST_ZIPCODE AS STOREZIP,  ST.ST_ADDR AS STOREADDR, ST.ST_ADDRDETAIL AS STOREADDRDETAIL,
        ST.ST_PHONE AS STOREPHONE, 
        SE.SE_CODE AS EMPCODE, SE.SE_NAME AS EMPNAME, SE.SE_SCLEV AS EMPLEVCODE, SC.SC_NAME AS LEVNAME,
        TO_CHAR(AL.ACCESSDATE, 'YYYYMMDDHH24MISS') AS ACCESSDATE, AL.ACCESSLOCATION AS ACCESSLOCATION
FROM (SELECT MAX(AL.AL_DATE) AS ACCESSDATE, AL.AL_IP AS ACCESSLOCATION, AL.AL_SESTCODE AS STORECODE, AL.AL_SECODE AS EMPCODE
        FROM WEBDBA.AL AL WHERE AL.AL_TYPE = 1
                          GROUP BY AL.AL_IP, AL.AL_SESTCODE, AL.AL_SECODE) AL 
        INNER JOIN WEBDBA.SE SE ON AL.STORECODE = SE.SE_STCODE AND AL.EMPCODE = SE.SE_CODE
        INNER JOIN WEBDBA.ST ST ON SE.SE_STCODE = ST.ST_CODE
        INNER JOIN WEBDBA.SC SC ON ST.ST_CODE = SC.SC_STCODE
        INNER JOIN WEBDBA.SG SG ON ST.ST_SGCODE = SG.SG_CODE ;
-- GRANT 
GRANT SELECT ON WEBDBA.ACCESSINFO TO WEBDEV;
-- DEV
SELECT * FROM WEBDBA.ACCESSINFO
WHERE STORECODE = '' AND EMPCODE = '';
  

